{"version":3,"sources":["components/DisplayTimer.js","images/sonic-waiting.gif","images/sonic-running.gif","sound_fx/sonic_music.mp3","sound_fx/sonic-rings-drop.mp3","sound_fx/sonic-jump.mp3","sound_fx/sonic-ring.mp3","components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayTimer","this","props","min","sec","className","Component","Timer","checkTimer","state","setState","addMin","value","target","Number","sonicJump","play","addSec","sonicRing","count","stopTimer","resetTimer","startTimer","intervalId","setInterval","sonicGif","sonic_running","startMusic","loop","pauseTimer","clearInterval","sonic_waiting","pause","sonicRingsFalling","currentTime","Audio","sonic_theme","sonic_ring_falling","sonic_jump","sonic_ring","src","alt","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.592df76b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './displayTimer.css'\n\nclass DisplayTimer extends Component {\n  render() {\n    const {min, sec} = this.props\n    return (\n      <div >\n        <span className='timer-numbers'>{(min >= 10) ? `${min}:` : `0${min}:`}</span>\n        <span className='timer-numbers'>{(sec >= 10) ? sec : `0${sec}`}</span>\n      </div>\n    );\n  }\n}\n\nexport default DisplayTimer;","export default __webpack_public_path__ + \"static/media/sonic-waiting.7637f4fc.gif\";","export default __webpack_public_path__ + \"static/media/sonic-running.ec074dfa.gif\";","export default __webpack_public_path__ + \"static/media/sonic_music.ecc9dd2e.mp3\";","export default __webpack_public_path__ + \"static/media/sonic-rings-drop.04fe971c.mp3\";","export default __webpack_public_path__ + \"static/media/sonic-jump.60549342.mp3\";","export default __webpack_public_path__ + \"static/media/sonic-ring.ac0c09fc.mp3\";","import React, { Component } from 'react';\nimport DisplayTimer from './DisplayTimer';\nimport './timer.css'\nimport sonic_waiting from '../images/sonic-waiting.gif'\nimport sonic_running from '../images/sonic-running.gif'\nimport sonic_theme from '../sound_fx/sonic_music.mp3'\nimport sonic_ring_falling from '../sound_fx/sonic-rings-drop.mp3'\nimport sonic_jump from '../sound_fx/sonic-jump.mp3'\nimport sonic_ring from '../sound_fx/sonic-ring.mp3'\n\nclass Timer extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      sonicGif: sonic_waiting,\n      min: 0,\n      sec: 0,\n    };\n\n    this.startMusic = new Audio(sonic_theme);\n    this.sonicRingsFalling = new Audio(sonic_ring_falling);\n    this.sonicJump = new Audio(sonic_jump);\n    this.sonicRing = new Audio(sonic_ring);\n  }\n\n  checkTimer = () => {\n    const {sec} = this.state;\n    if (sec === 60) {\n      this.setState(({min}) => ({\n        min: min + 1,\n        sec: 0,\n      }))\n    }\n  }\n\n  addMin = ({target: {value}}) => {\n    this.setState(({ min }) => ({\n      min: min + Number(value)\n    }))\n    this.sonicJump.play()\n  }\n\n  addSec = () => {\n    this.setState(({ sec }) => ({\n      sec: sec + 30\n    }), () => {\n      this.checkTimer()\n    })\n    this.sonicRing.play()\n  }\n\n  count = () => {\n    const { min, sec } = this.state;\n\n    this.setState(({ sec }) => ({\n      sec: sec - 1\n    }), () => {\n      if (min === 0 && sec === 0) {\n        this.stopTimer()\n      } else if (sec === 0) {\n        this.setState(({ min }) => ({\n          min: min - 1,\n          sec: 59,\n        }))\n      }\n    })\n  }\n\n  resetTimer = () => {\n    this.setState({\n      min: 0,\n      sec: 0,\n    })\n  }\n\n  startTimer = () => {\n    const ONE_SECOND = 1000\n    let intervalId = setInterval(this.count, ONE_SECOND)\n    this.setState({\n      intervalId: intervalId,\n      sonicGif: sonic_running\n    })\n    this.startMusic.loop = true;\n    this.startMusic.play()\n  }\n\n  pauseTimer = () => {\n    const { intervalId } = this.state;\n    clearInterval(intervalId);\n    this.setState({ sonicGif: sonic_waiting });\n    this.startMusic.pause();\n    this.sonicRingsFalling.play();\n  }\n\n  stopTimer = () => {\n    const { intervalId } = this.state;\n    clearInterval(intervalId);\n    this.setState({ sonicGif: sonic_waiting });\n    this.startMusic.pause();\n    this.startMusic.currentTime = 0;\n    this.sonicRingsFalling.play();\n    this.resetTimer();\n  }\n\n  render() {\n    const { sonicGif, min, sec } = this.state;\n    return (\n      <div>\n        <h1 className='timer-title'>Sonic Timer</h1>\n        <DisplayTimer min={min} sec={sec} />\n        <img className='sonic-gif' src={sonicGif} alt='sonic' />\n        <section className='buttons-panel'>\n          <div className='section-add-time-buttons'>\n            <button className='add-time-buttons' value={5} onClick={this.addMin}>+5min</button>\n            <button className='add-time-buttons' value={1} onClick={this.addMin}>+1min</button>\n            <button className='add-time-buttons' onClick={this.addSec}>+30sec</button>\n          </div>\n          <div className='section-start-stop-buttons'>\n            <button className='start-stop-buttons' onClick={this.startTimer} >START!</button>\n            <button className='start-stop-buttons' onClick={this.pauseTimer} >PAUSE!</button>\n            <button className='start-stop-buttons' onClick={this.stopTimer} >STOP!</button>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import './App.css';\nimport Timer from './components/Timer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}